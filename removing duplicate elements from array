#include <stdio.h>

void removeDuplicates(int arr[], int *n) {
    int temp[*n]; // Temporary array to store unique elements
    int j = 0; // Index for the temp array

    for (int i = 0; i < *n; i++) {
        // Check if the element is already in the temp array
        int found = 0;
        for (int k = 0; k < j; k++) {
            if (arr[i] == temp[k]) {
                found = 1;
                break;
            }
        }
        // If the element is not found, add it to the temp array
        if (!found) {
            temp[j] = arr[i];
            j++;
        }
    }

    // Copy the unique elements back to the original array
    for (int i = 0; i < j; i++) {
        arr[i] = temp[i];
    }

    // Update the size of the original array
    *n = j;
}

void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[] = {1, 2, 3, 2, 4, 4, 5, 1, 6};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Original array: \n");
    printArray(arr, n);

    removeDuplicates(arr, &n);

    printf("Array after removing duplicates: \n");
    printArray(arr, n);

    return 0;
}
