#include <stdio.h>

int binarySearch(int arr[], int size, int target) {
    int left = 0, right = size - 1;
    
    // Continue searching until the search interval is valid
    while (left <= right) {
        int mid = left + (right - left) / 2;  // Calculate the middle index
        
        // Check if the target is at the middle position
        if (arr[mid] == target) {
            return mid;  // Return the index of the target
        }
        
        // If the target is greater than the middle element, ignore the left half
        if (arr[mid] < target) {
            left = mid + 1;
        }
        // If the target is smaller than the middle element, ignore the right half
        else {
            right = mid - 1;
        }
    }
    
    // If we reach here, the element was not found
    return -1;
}

int main() {
    int n, target, result;

    // Input: size of the array and the array elements
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    
    int arr[n];
    printf("Enter the elements in sorted order:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    
    // Input: the target element to search for
    printf("Enter the element to search: ");
    scanf("%d", &target);
    
    // Perform binary search
    result = binarySearch(arr, n, target);
    
    // Output the result
    if (result != -1) {
        printf("Element %d found at index %d.\n", target, result);
    } else {
        printf("Element %d not found in the array.\n", target);
    }
    
    return 0;
}
