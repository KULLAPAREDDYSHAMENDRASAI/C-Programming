#include <stdio.h>

// Function to perform matrix addition using pointers
void matrixAddition(int *A, int *B, int *C, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Access elements using pointer arithmetic and add them
            *(C + i * cols + j) = *(A + i * cols + j) + *(B + i * cols + j);
        }
    }
}

// Function to print a matrix
void printMatrix(int *matrix, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            // Access elements using pointer arithmetic
            printf("%d ", *(matrix + i * cols + j));
        }
        printf("\n");
    }
}

int main() {
    int rows, cols;

    // Input number of rows and columns for the matrices
    printf("Enter number of rows: ");
    scanf("%d", &rows);
    printf("Enter number of columns: ");
    scanf("%d", &cols);

    // Declare matrices as 2D arrays
    int A[rows][cols], B[rows][cols], C[rows][cols];

    // Input elements for matrix A
    printf("Enter elements of matrix A:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("A[%d][%d]: ", i, j);
            scanf("%d", &A[i][j]);
        }
    }

    // Input elements for matrix B
    printf("Enter elements of matrix B:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("B[%d][%d]: ", i, j);
            scanf("%d", &B[i][j]);
        }
    }

    // Perform matrix addition using pointers
    matrixAddition((int *)A, (int *)B, (int *)C, rows, cols);

    // Print the result matrix
    printf("\nResult of matrix addition (A + B):\n");
    printMatrix((int *)C, rows, cols);

    return 0;
}
